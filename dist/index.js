'use strict';var EventEmitter=require('eventemitter3'),debug=require('debug')('signalk:client'),url=require('url'),Promise=require('bluebird'),agent=require('superagent-promise')(require('superagent'),Promise),BrowserWebSocket=global.WebSocket||global.MozWebSocket,WebSocket=BrowserWebSocket;function Client(a,b,c){EventEmitter.call(this),this.hostname=a,c?(this.protocol='https',this.wsProtocol='wss',this.port=b||443):(this.protocol='http',this.wsProtocol='ws',this.port=b||80)}require('util').inherits(Client,EventEmitter),Client.prototype.connect=function(a){debug('connect');var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),b&&c?this.connectDelta(b+':'+c,a.onData,a.onConnect,a.onDisconnect,a.onError,a.onClose,a.subscribe):this.discoverAndConnect(a)},Client.prototype.connectP=function(a){console.log(a),debug('connect'),debug(a);var b=this.hostname,c=this.port;return a&&(b=a.hostname||b,c=a.port||c),new Promise(function(d,e){var f=this.connectDeltaByUrl.bind(this);this.get('/signalk',b,c).then(function(b){debug('Got '+JSON.stringify(b.body.endpoints,null,2));f(b.body.endpoints.v1['signalk-ws'],a.onData,function onConnect(b){a.onConnect&&a.onConnect(b),d(b)},a.onDisconnect,function onError(b){a.onError&&a.onError(b),e(b)},a.onClose,a.subscribe)}).catch(function(a){e(a)})})},Client.prototype.apiGet=function(a){return this.get('/signalk/v1/api'+a)},Client.prototype.get=function(a,b,c){var d={protocol:this.protocol,hostname:b||this.hostname,port:c||this.port,path:a};return agent('GET',url.format(d))},Client.prototype.discoveryAvailable=function(){return!1},Client.prototype.startDiscovery=function(){return Promise.resolve([])},Client.prototype.stopDiscovery=function(){debug('Stopping discovery'),this.browser&&(this.browser.stop(),debug('Discovery stopping'))},Client.prototype.discoverAndConnect=function(){return Promise.reject(new Error('Not supported'))},Client.prototype.connectDelta=function(a,b,c,d,e,f,g){var h={protocol:this.wsProtocol,slashes:!0,hostname:a.split(':')[0],port:a.split(':')[1],pathname:'/signalk/v1/stream'};return g&&(h.query={subscribe:g}),this.connectDeltaByUrl(url.format(h),b,c,d,e,f)},Client.prototype.connectDeltaByUrl=function(a,b,c,d,e,f){var g=url.parse(a);this.hostname=g.hostname,this.port=g.port;var h={context:'vessels.self',subscribe:[{path:'*'}]};debug('Connecting ws to '+g.href);var i={hostname:this.hostname};if('undefined'!=typeof Primus){debug('Using Primus');var j=Primus.connect(a,{reconnect:{maxDelay:15000,minDelay:500,retries:Infinity}});j.on('data',b),i.send=j.write.bind(j),i.disconnect=function(){j.end(),debug('Disconnected')},c?j.on('open',c.bind(this,i)):j.on('open',function(){i.send(h)})}else{debug('Using ws');var k=new WebSocket(a);i.send=function(a){k.send('string'==typeof a?a:JSON.stringify(a))},i.disconnect=function(){k.close(),debug('Disconnected')},k.onopen=function(){debug('open'),c?c(i):i.send(h)},k.onerror=function(a){debug('error:'+a),e&&e(a)},k.onmessage=function(a){try{b(JSON.parse(a.data))}catch(a){console.error(a)}},k.onclose=function(a){debug('close:'+a),f&&f(a)}}return i.subscribeAll=function(){i.send(h)},i},Client.prototype.getSelf=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/vessels/self'};return agent('GET',url.format(a))},Client.prototype.getSelfId=function(){var a={protocol:this.protocol,hostname:this.hostname,port:this.port,pathname:'/signalk/v1/api/self'};return agent('GET',url.format(a))},Client.prototype.getSelfMatcher=function(){return this.getSelfId().then(function(a){var b=a.body,c=b.mmsi||b.uuid;if(c){return function(a){return'self'===a.context||'vessels.self'===a.context||a.context==='vessels.'+c}}return function(){return!0}})},Client.prototype.getMeta=function(a,b){return this.get(a+'/'+b.split('.').join('/')+'/meta')};function isDelta(a){return'undefined'!=typeof a.context}function isHello(a){return'undefined'!=typeof a.version}module.exports={Client:Client,isDelta:isDelta,isHello:isHello};